---
import stylesheet from "./app.css?url";
import fontMono from "../assets/ibmplexmono.woff2?url";
import fontSans from "../assets/ibmplexsans.woff2?url";
import { ClientRouter } from "astro:transitions";
import Header from "@/components/Header.astro";
interface Props {
  title?: string;
}
const { title = "exectx.run" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="preload"
      href={fontMono}
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href={fontSans}
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link rel="preload" href={stylesheet} as="style" crossorigin="anonymous" />
    <link rel="stylesheet" href={stylesheet} crossorigin="anonymous" />
    <!-- <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous" />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Sans&display=swap"
      rel="stylesheet"
    /> -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <title>{title}</title>
  </head>
  <body class="tabular-nums">
    <Header />
    <slot />
  </body>
</html>

<script>
  import posthog from "posthog-js";
  if (import.meta.env.PROD) {
    posthog.init(import.meta.env.PUBLIC_POSTHOG_KEY, {
      api_host: import.meta.env.PUBLIC_POSTHOG_API_HOST,
      person_profiles: "always",
    });
  }
</script>

<script is:inline>
  function applyTheme() {
    let userTheme = localStorage.getItem("theme");
    const hasUserTheme = localStorage.getItem("user-theme");
    let defaultTheme = "light";
    if (hasUserTheme) {
      if (![null, "light", "dark"].includes(userTheme)) {
        localStorage.removeItem("theme");
        userTheme = null;
      }
      defaultTheme = window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }
    if (userTheme === defaultTheme) {
      localStorage.removeItem("theme");
    }
    document.documentElement.classList.remove("light", "dark");
    document.documentElement.classList.add(userTheme ?? defaultTheme);
  }

  applyTheme();
  document.addEventListener("astro:after-swap", applyTheme);
</script>

<style is:inline>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  body {
    position: relative;
    text-rendering: optimizeLegibility;
    text-underline-offset: 0.25rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  *,
  *::before,
  *::after {
    min-width: 0;
  }
</style>
